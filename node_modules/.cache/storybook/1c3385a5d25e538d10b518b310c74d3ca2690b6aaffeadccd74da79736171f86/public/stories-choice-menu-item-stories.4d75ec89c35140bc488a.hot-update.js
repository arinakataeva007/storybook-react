"use strict";
self["webpackHotUpdatestorybook_react"]("stories-choice-menu-item-stories",{

/***/ "./src/stories/choice/menu-item.stories.tsx":
/*!**************************************************!*\
  !*** ./src/stories/choice/menu-item.stories.tsx ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DarkTheme: () => (/* binding */ DarkTheme),
/* harmony export */   LightTheme: () => (/* binding */ LightTheme),
/* harmony export */   __namedExportsOrder: () => (/* binding */ __namedExportsOrder),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _feature_choice_menu_item_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../feature/choice/menu-item.component */ "./src/feature/choice/menu-item.component.tsx");
/* harmony import */ var _feature_buttons_base_button_base_button_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../feature/buttons/base-button/base-button.component */ "./src/feature/buttons/base-button/base-button.component.tsx");



// Define metadata for the component
const meta = {
  title: 'Choice/MenuItemComponent',
  component: _feature_choice_menu_item_component__WEBPACK_IMPORTED_MODULE_1__.MenuItem,
  subcomponents: {
    BaseIcon
  },
  argTypes: {
    theme: {
      options: ['light-theme', 'dark-theme'],
      control: {
        type: 'radio'
      },
      table: {
        defaultValue: {
          summary: 'light-theme'
        }
      }
    },
    disabled: {
      table: {
        defaultValue: {
          summary: 'false'
        }
      }
    },
    showIcon: {
      table: {
        defaultValue: {
          summary: 'false'
        }
      },
      description: 'Icon always appears before text.'
    },
    showHint: {
      table: {
        defaultValue: {
          summary: 'false'
        }
      }
    },
    showCollapseIcon: {
      table: {
        defaultValue: {
          summary: 'true'
        }
      },
      description: 'Shows dropdown on click.'
    },
    showText: {
      table: {
        defaultValue: {
          summary: 'true'
        }
      }
    },
    isActive: {
      description: 'Indicates that the item is selected.'
    },
    popUpScroll: {
      description: 'Enables scrolling for the dropdown list if true.',
      table: {
        defaultValue: {
          summary: 'false'
        }
      }
    },
    isOwner: {
      description: 'True if the component is nested and loses some properties.',
      table: {
        defaultValue: {
          summary: 'false'
        }
      }
    },
    activeState: {
      description: 'Callback that returns true if selected, false if not.'
    }
  },
  parameters: {
    backgrounds: {
      default: 'Light Theme'
    }
  }
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (meta);
const Template = args => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
  style: {
    width: '300px'
  }
}, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_feature_choice_menu_item_component__WEBPACK_IMPORTED_MODULE_1__.MenuItem, {
  ...args,
  activeState: state => console.log('Active state:', state)
}, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(BaseIcon, {
  isOwner: true,
  theme: args.theme,
  prevIcon: true,
  name: "plc",
  size: "base"
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_feature_choice_menu_item_component__WEBPACK_IMPORTED_MODULE_1__.MenuItem, {
  theme: args.theme,
  disabled: false,
  label: "Option 1",
  showIcon: true,
  hint: "Ctrl + Shift + N",
  activeState: state => console.log('Option 1 state:', state)
}, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(BaseIcon, {
  isOwner: true,
  prevIcon: true,
  name: "plc",
  size: "base",
  theme: args.theme
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_feature_choice_menu_item_component__WEBPACK_IMPORTED_MODULE_1__.MenuItem, {
  theme: args.theme,
  disabled: false,
  label: "Last Option",
  showIcon: true,
  hint: "Ctrl + Shift + N",
  showCollapseIcon: false,
  activeState: state => console.log('Last Option state:', state)
}, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(BaseIcon, {
  isOwner: true,
  prevIcon: true,
  name: "plc",
  size: "base",
  theme: args.theme
})))));
// Light theme story
const LightTheme = Template.bind({});
LightTheme.args = {
  hint: 'Ctrl + Shift + N',
  label: 'Label',
  showIcon: true,
  showText: true,
  showCollapseIcon: true,
  isActive: false,
  showHint: true,
  popUpScroll: false,
  theme: 'light-theme',
  disabled: false,
  isOwner: false
};
// Dark theme story
const DarkTheme = Template.bind({});
DarkTheme.args = {
  hint: 'Ctrl + Shift + N',
  showIcon: true,
  showText: true,
  showCollapseIcon: true,
  isActive: false,
  showHint: true,
  label: 'Label',
  popUpScroll: false,
  theme: 'dark-theme',
  disabled: false,
  isOwner: false
};
;
const __namedExportsOrder = ["LightTheme", "DarkTheme"];
LightTheme.parameters = {
  ...LightTheme.parameters,
  docs: {
    ...LightTheme.parameters?.docs,
    source: {
      originalSource: "args => <div style={{\n  width: '300px'\n}}>\n    <MenuItem {...args} activeState={state => console.log('Active state:', state)}>\n      <BaseIcon isOwner={true} theme={args.theme} prevIcon name=\"plc\" size=\"base\" />\n      <MenuItem theme={args.theme} disabled={false} label=\"Option 1\" showIcon={true} hint=\"Ctrl + Shift + N\" activeState={state => console.log('Option 1 state:', state)}>\n        <BaseIcon isOwner={true} prevIcon name=\"plc\" size=\"base\" theme={args.theme} />\n        <MenuItem theme={args.theme} disabled={false} label=\"Last Option\" showIcon={true} hint=\"Ctrl + Shift + N\" showCollapseIcon={false} activeState={state => console.log('Last Option state:', state)}>\n          <BaseIcon isOwner={true} prevIcon name=\"plc\" size=\"base\" theme={args.theme} />\n        </MenuItem>\n      </MenuItem>\n    </MenuItem>\n  </div>",
      ...LightTheme.parameters?.docs?.source
    }
  }
};
DarkTheme.parameters = {
  ...DarkTheme.parameters,
  docs: {
    ...DarkTheme.parameters?.docs,
    source: {
      originalSource: "args => <div style={{\n  width: '300px'\n}}>\n    <MenuItem {...args} activeState={state => console.log('Active state:', state)}>\n      <BaseIcon isOwner={true} theme={args.theme} prevIcon name=\"plc\" size=\"base\" />\n      <MenuItem theme={args.theme} disabled={false} label=\"Option 1\" showIcon={true} hint=\"Ctrl + Shift + N\" activeState={state => console.log('Option 1 state:', state)}>\n        <BaseIcon isOwner={true} prevIcon name=\"plc\" size=\"base\" theme={args.theme} />\n        <MenuItem theme={args.theme} disabled={false} label=\"Last Option\" showIcon={true} hint=\"Ctrl + Shift + N\" showCollapseIcon={false} activeState={state => console.log('Last Option state:', state)}>\n          <BaseIcon isOwner={true} prevIcon name=\"plc\" size=\"base\" theme={args.theme} />\n        </MenuItem>\n      </MenuItem>\n    </MenuItem>\n  </div>",
      ...DarkTheme.parameters?.docs?.source
    }
  }
};

/***/ })

});
//# sourceMappingURL=stories-choice-menu-item-stories.4d75ec89c35140bc488a.hot-update.js.map
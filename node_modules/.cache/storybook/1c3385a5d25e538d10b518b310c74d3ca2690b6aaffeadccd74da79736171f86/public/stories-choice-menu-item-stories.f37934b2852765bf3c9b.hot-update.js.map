{"version":3,"file":"stories-choice-menu-item-stories.f37934b2852765bf3c9b.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://storybook-react/./src/stories/choice/menu-item.stories.tsx"],"sourcesContent":["import React from 'react';\nimport { Meta, StoryObj } from '@storybook/react';\nimport { MenuItem } from '../../feature/';\nimport { BaseIcon } from '../../lib/features/icons/base/base-icon/base-icon.component';\n\n// Define metadata for the component\nconst meta: Meta<typeof MenuItem> = {\n  title: 'Choice/MenuItemComponent',\n  component: MenuItem,\n  subcomponents: { BaseIcon },\n  argTypes: {\n    theme: {\n      options: ['light-theme', 'dark-theme'],\n      control: { type: 'radio' },\n      table: { defaultValue: { summary: 'light-theme' } },\n    },\n    disabled: {\n      table: { defaultValue: { summary: 'false' } },\n    },\n    showIcon: {\n      table: { defaultValue: { summary: 'false' } },\n      description: 'Icon always appears before text.',\n    },\n    showHint: {\n      table: { defaultValue: { summary: 'false' } },\n    },\n    showCollapseIcon: {\n      table: { defaultValue: { summary: 'true' } },\n      description: 'Shows dropdown on click.',\n    },\n    showText: {\n      table: { defaultValue: { summary: 'true' } },\n    },\n    isActive: {\n      description: 'Indicates that the item is selected.',\n    },\n    popUpScroll: {\n      description: 'Enables scrolling for the dropdown list if true.',\n      table: { defaultValue: { summary: 'false' } },\n    },\n    isOwner: {\n      description: 'True if the component is nested and loses some properties.',\n      table: { defaultValue: { summary: 'false' } },\n    },\n    activeState: {\n      description: 'Callback that returns true if selected, false if not.',\n    },\n  },\n  parameters: {\n    backgrounds: { default: 'Light Theme' },\n  },\n};\n\nexport default meta;\n\nconst Template: Story<typeof MenuItem> = (args) => (\n  <div style={{ width: '300px' }}>\n    <MenuItem\n      {...args}\n      activeState={(state) => console.log('Active state:', state)}\n    >\n      <BaseIcon\n        isOwner={true}\n        theme={args.theme}\n        prevIcon\n        name=\"plc\"\n        size=\"base\"\n      />\n      <MenuItem\n        theme={args.theme}\n        disabled={false}\n        label=\"Option 1\"\n        showIcon={true}\n        hint=\"Ctrl + Shift + N\"\n        activeState={(state) => console.log('Option 1 state:', state)}\n      >\n        <BaseIcon\n          isOwner={true}\n          prevIcon\n          name=\"plc\"\n          size=\"base\"\n          theme={args.theme}\n        />\n        <MenuItem\n          theme={args.theme}\n          disabled={false}\n          label=\"Last Option\"\n          showIcon={true}\n          hint=\"Ctrl + Shift + N\"\n          showCollapseIcon={false}\n          activeState={(state) => console.log('Last Option state:', state)}\n        >\n          <BaseIcon\n            isOwner={true}\n            prevIcon\n            name=\"plc\"\n            size=\"base\"\n            theme={args.theme}\n          />\n        </MenuItem>\n      </MenuItem>\n    </MenuItem>\n  </div>\n);\n\n// Light theme story\nexport const LightTheme = Template.bind({});\nLightTheme.args = {\n  hint: 'Ctrl + Shift + N',\n  label: 'Label',\n  showIcon: true,\n  showText: true,\n  showCollapseIcon: true,\n  isActive: false,\n  showHint: true,\n  popUpScroll: false,\n  theme: 'light-theme',\n  disabled: false,\n  isOwner: false,\n};\n\n// Dark theme story\nexport const DarkTheme = Template.bind({});\nDarkTheme.args = {\n  hint: 'Ctrl + Shift + N',\n  showIcon: true,\n  showText: true,\n  showCollapseIcon: true,\n  isActive: false,\n  showHint: true,\n  label: 'Label',\n  popUpScroll: false,\n  theme: 'dark-theme',\n  disabled: false,\n  isOwner: false,\n};\n"],"names":[],"sourceRoot":""}
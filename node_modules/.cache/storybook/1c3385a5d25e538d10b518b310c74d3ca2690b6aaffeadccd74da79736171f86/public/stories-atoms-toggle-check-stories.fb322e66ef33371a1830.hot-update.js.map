{"version":3,"file":"stories-atoms-toggle-check-stories.fb322e66ef33371a1830.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChDA;AAWA;AAQA;AACA;AACA;AACA;AAEA;AAIA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;;AAGA;AAEA","sources":["webpack://storybook-react/./src/stories/atoms/toggle-check.stories.tsx","webpack://storybook-react/./src/feature/atoms/toggle-check/toggle-check.tsx"],"sourcesContent":["import React from 'react';\nimport { Meta, StoryObj } from '@storybook/react';\nimport {ToggleCheckComponent} from '../../feature/atoms/toggle-check/toggle-check';\nimport './'\n// Define the metadata for the ToggleCheckComponent story\nconst meta: Meta<typeof ToggleCheckComponent> = {\n  title: 'Atoms/ToggleCheckComponent',\n  component: ToggleCheckComponent,\n  tags: ['autodocs'],\n  argTypes: {\n    theme: {\n      options: ['light-theme', 'dark-theme'],\n      control: { type: 'radio' },\n      table: { defaultValue: { summary: 'light-theme' } },\n    },\n    disabled: {\n      table: { defaultValue: { summary: 'false' } },\n    },\n  },\n};\n\nexport default meta;\n\n// Define the story type\ntype Story = StoryObj<typeof ToggleCheckComponent>;\n\n// Define the LightTheme story\nexport const LightTheme: Story = {\n  parameters: {\n    backgrounds: { default: 'Light Theme' },\n  },\n  args: {\n    toggleId: 'test1',\n    disabled: false,\n    theme: 'light-theme',\n  },\n};\n\n// Define the DarkTheme story\nexport const DarkTheme: Story = {\n  parameters: {\n    backgrounds: { default: 'Dark Theme' },\n  },\n  args: {\n    toggleId: 'test1',\n    disabled: false,\n    theme: 'dark-theme',\n  },\n};\n","import React, { ChangeEvent } from 'react';\n\ninterface ToggleCheckProps {\n  toggleId: string;\n  value: boolean;\n  onChange: (value: boolean) => void;\n  onBlur: () => void;\n  disabled?: boolean;\n  theme: string;\n}\n\nexport const ToggleCheckComponent: React.FC<ToggleCheckProps> = ({\n  toggleId,\n  value,\n  onChange,\n  onBlur,\n  disabled = false,\n  theme,\n}) => {\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n    onChange(e.target.checked);\n    onBlur();\n  };\n\n  const toggleClass = disabled\n    ? `toggle--${theme} toggle--disabled--${theme}`\n    : `toggle--${theme}`;\n\n  return (\n    <div>\n      <input\n        id={toggleId}\n        type=\"checkbox\"\n        checked={value}\n        onChange={handleChange}\n        onBlur={onBlur}\n        disabled={disabled}\n        className=\"toggle-check\"\n      />\n      <label htmlFor={toggleId} className={`toggle-btn ${toggleClass}`} />\n    </div>\n  );\n};\n\nexport default ToggleCheckComponent;\n"],"names":[],"sourceRoot":""}
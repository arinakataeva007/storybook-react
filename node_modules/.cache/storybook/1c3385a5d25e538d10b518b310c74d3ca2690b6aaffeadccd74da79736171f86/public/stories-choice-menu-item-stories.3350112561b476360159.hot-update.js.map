{"version":3,"file":"stories-choice-menu-item-stories.3350112561b476360159.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAgBA;AAcA;AACA;AAEA;AACA;AACA;AAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AAEA;AACA;AACA;AACA;;AAOA;AAEA","sources":["webpack://storybook-react/./src/feature/choice/menu-item.component.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport CollapseIcon from \"../../feature/icons/collapse-icon/collapse-icon.component\";\nimport PopUp from \"../../feature/floating/pop-up.component\";\nimport Label from \"../../feature/atoms/label/label.component\";\nimport './menu-item.style.scss';\ninterface MenuItemProps {\n  isOwner?: boolean;\n  hint: string;\n  popUpScroll?: boolean;\n  showCollapseIcon?: boolean;\n  isActive?: boolean;\n  showHint?: boolean;\n  theme: \"light-theme\" | \"dark-theme\";\n  label: string;\n  disabled?: boolean;\n  showIcon?: boolean;\n  showText?: boolean;\n  activeState?: (state: boolean) => void;\n}\n\nexport const MenuItem: React.FC<MenuItemProps> = ({\n  isOwner = false,\n  hint,\n  popUpScroll = false,\n  showCollapseIcon = true,\n  isActive = false,\n  showHint = false,\n  theme,\n  label,\n  disabled = false,\n  showIcon = true,\n  showText = true,\n  activeState,\n}) => {\n  const [active, setActive] = useState(isActive);\n  const menuItemRef = useRef<HTMLDivElement | null>(null);\n\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if (\n        menuItemRef.current &&\n        !menuItemRef.current.contains(event.target as Node)\n      ) {\n        setActive(false);\n        closeDropdown();\n      }\n    };\n\n    document.addEventListener(\"click\", handleClickOutside);\n    return () => document.removeEventListener(\"click\", handleClickOutside);\n  }, []);\n\n  const closeDropdown = () => {\n    if (activeState) activeState(active);\n  };\n\n  const openPopUp = () => {\n    setActive(!active);\n    if (activeState) activeState(!active);\n  };\n\n  const classes = [\n    `menu-item-${theme}`,\n    isOwner ? \"with-owner\" : \"\",\n    disabled ? `menu-item-disabled-${theme}` : \"\",\n  ].join(\" \");\n\n  return (\n    <section\n      tabIndex={0}\n      className={`menu-item-container ${classes}`}\n      onClick={openPopUp}\n      ref={menuItemRef}\n    >\n      <Label\n        isOwner={true}\n        disabled={disabled}\n        showIcon={showIcon}\n        showText={showText}\n        size=\"base\"\n        label={label}\n        theme={theme}\n      >\n        <div>{/* Any additional content can go here */}</div>\n      </Label>\n\n      <div className=\"footer-container\">\n        {showHint && (\n          <Label\n            size=\"base\"\n            showIcon={false}\n            showText={true}\n            label={hint}\n            isOwner={true}\n            theme={theme}\n          />\n        )}\n        {showCollapseIcon && (\n          <button\n            className=\"collapse-btn\"\n            onMouseEnter={openPopUp}\n            disabled={disabled}\n          >\n            <CollapseIcon\n              disabled={disabled}\n              size=\"base\"\n              theme={theme}\n              rotate=\"right\"\n              isFill={false}\n              fill={\"\"}\n            />\n          </button>\n        )}\n      </div>\n\n      {active && showCollapseIcon && (\n        <PopUp\n          theme={theme}\n          isModal={false}\n          scroll={popUpScroll}\n          children={undefined}\n        >\n          {/* Children content will be inserted here */}\n        </PopUp>\n      )}\n    </section>\n  );\n};\n\nexport default MenuItem;\n"],"names":[],"sourceRoot":""}
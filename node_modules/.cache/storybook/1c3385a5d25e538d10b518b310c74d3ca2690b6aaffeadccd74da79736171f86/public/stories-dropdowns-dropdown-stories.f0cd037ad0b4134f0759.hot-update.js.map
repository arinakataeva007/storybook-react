{"version":3,"file":"stories-dropdowns-dropdown-stories.f0cd037ad0b4134f0759.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AAEA;AAIA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://storybook-react/./src/stories/dropdowns/dropdown.stories.tsx"],"sourcesContent":["import { Meta, StoryObj } from '@storybook/react';\nimport { Dropdown } from '../../lib/features/dropdowns/Dropdown';\nimport { BaseIcon } from '../../lib/features/icons/BaseIcon';\nimport { MenuItem } from '../../feature/choice/menu-item.component';\nimport { PopUp } from '../../feature/floating/pop-up.component';\n\nconst meta: Meta = {\n  title: 'Dropdown/DropdownComponent',\n  component: Dropdown,\n  subcomponents: { BaseIcon, MenuItem, PopUp },\n  decorators: [\n    (Story) => (\n      <div style={{ width: '100px' }}>\n        <Story />\n      </div>\n    ),\n  ],\n  argTypes: {\n    theme: {\n      options: ['light-theme', 'dark-theme'],\n      control: { type: 'radio' },\n      table: { defaultValue: { summary: 'light-theme' } },\n    },\n    disabled: {\n      table: { defaultValue: { summary: 'false' } },\n    },\n    collapsePlacement: {\n      options: ['left', 'right'],\n      control: { type: 'radio' },\n      table: { defaultValue: { summary: 'right' } },\n    },\n    activeState: {\n      description:\n        'Output property returning true if the dropdown is open and false if the dropdown is closed.',\n    },\n    showIcon: {\n      table: { defaultValue: { summary: 'false' } },\n    },\n    showText: {\n      table: { defaultValue: { summary: 'true' } },\n    },\n  },\n  render: (args) => (\n    <Dropdown\n      {...args}\n      label=\"Label\"\n      updateLabel={(label: string) => args.label = label}\n    >\n      <BaseIcon prevIcon size=\"base\" name=\"add\" />\n      <MenuItem\n        options\n        onClick={() => args.updateLabel('Option1')}\n        isActive={args.label === 'Option1'}\n        label=\"Option1\"\n        showIcon={true}\n        showText={true}\n        showCollapseIcon={false}\n        theme={args.theme}\n      />\n      <MenuItem\n        options\n        onClick={() => args.updateLabel('Option2')}\n        label=\"Option2\"\n        isActive={args.label === 'Option2'}\n        showIcon={true}\n        showText={true}\n        showCollapseIcon={false}\n        theme={args.theme}\n      />\n      <MenuItem\n        options\n        onClick={() => args.updateLabel('Option3')}\n        label=\"Option3\"\n        isActive={args.label === 'Option3'}\n        showIcon={true}\n        showText={true}\n        showCollapseIcon={false}\n        theme={args.theme}\n      />\n      <MenuItem\n        options\n        onClick={() => args.updateLabel('Option4')}\n        label=\"Option4\"\n        isActive={args.label === 'Option4'}\n        showIcon={true}\n        showText={true}\n        showCollapseIcon={false}\n        theme={args.theme}\n      />\n      <MenuItem\n        options\n        onClick={() => args.updateLabel('Option5')}\n        label=\"Option5\"\n        isActive={args.label === 'Option5'}\n        showIcon={true}\n        showText={true}\n        showCollapseIcon={false}\n        theme={args.theme}\n      />\n    </Dropdown>\n  ),\n  tags: ['autodocs'],\n};\n\nexport default meta;\n\ntype Story = Story<typeof meta>;\n\nexport const LightTheme: Story = {\n  parameters: {\n    backgrounds: { default: 'Light Theme' },\n    docs: {\n      description: {\n        story: '',\n      },\n    },\n  },\n  args: {\n    label: 'Label',\n    theme: 'light-theme',\n    collapsePlacement: 'right',\n    showIcon: true,\n    showText: true,\n    disabled: false,\n  },\n};\n\nexport const DarkTheme: Story = {\n  parameters: {\n    backgrounds: { default: 'Dark Theme' },\n  },\n  args: {\n    label: 'Label',\n    theme: 'dark-theme',\n    showIcon: true,\n    showText: true,\n    collapsePlacement: 'right',\n    disabled: false,\n  },\n};\n"],"names":[],"sourceRoot":""}
"use strict";
self["webpackHotUpdatestorybook_react"]("stories-input-rich-field-stories",{

/***/ "./src/feature/input/rich-text-field/rich-text.component.tsx":
/*!*******************************************************************!*\
  !*** ./src/feature/input/rich-text-field/rich-text.component.tsx ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   RichTextField: () => (/* binding */ RichTextField),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _rich_text_style_scss__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./rich-text.style.scss */ "./src/feature/input/rich-text-field/rich-text.style.scss");


const RichTextField = ({ placeholder = '', hint = '', showHint = false, theme = '', onInputChange, onValueChange, disabled = false })=>{
    const [value, setValue] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('');
    const handleInput = (event)=>{
        const newValue = event.target.value;
        setValue(newValue);
        console.log(value);
        if (onInputChange) onInputChange(newValue);
    };
    const handleChange = (event)=>{
        const newValue = event.target.value;
        setValue(newValue);
        if (onValueChange) onValueChange(newValue);
    };
    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
        className: "rich-text"
    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement("textarea", {
        className: `rich-text-field ${theme === 'dark-theme' ? 'dark-theme' : ''}`,
        placeholder: placeholder,
        disabled: disabled,
        value: value,
        onInput: handleInput,
        onChange: handleChange
    }), showHint && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
        className: "hint-container-rich"
    }, hint));
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (RichTextField);
RichTextField.__docgenInfo = {
    "description": "",
    "methods": [],
    "displayName": "RichTextField",
    "props": {
        "placeholder": {
            "required": false,
            "tsType": {
                "name": "string"
            },
            "description": "",
            "defaultValue": {
                "value": "''",
                "computed": false
            }
        },
        "hint": {
            "required": false,
            "tsType": {
                "name": "string"
            },
            "description": "",
            "defaultValue": {
                "value": "''",
                "computed": false
            }
        },
        "showHint": {
            "required": false,
            "tsType": {
                "name": "boolean"
            },
            "description": "",
            "defaultValue": {
                "value": "false",
                "computed": false
            }
        },
        "theme": {
            "required": false,
            "tsType": {
                "name": "string"
            },
            "description": "",
            "defaultValue": {
                "value": "''",
                "computed": false
            }
        },
        "onInputChange": {
            "required": false,
            "tsType": {
                "name": "signature",
                "type": "function",
                "raw": "(value: string) => void",
                "signature": {
                    "arguments": [
                        {
                            "type": {
                                "name": "string"
                            },
                            "name": "value"
                        }
                    ],
                    "return": {
                        "name": "void"
                    }
                }
            },
            "description": ""
        },
        "onValueChange": {
            "required": false,
            "tsType": {
                "name": "signature",
                "type": "function",
                "raw": "(value: string) => void",
                "signature": {
                    "arguments": [
                        {
                            "type": {
                                "name": "string"
                            },
                            "name": "value"
                        }
                    ],
                    "return": {
                        "name": "void"
                    }
                }
            },
            "description": ""
        },
        "disabled": {
            "required": false,
            "tsType": {
                "name": "boolean"
            },
            "description": "",
            "defaultValue": {
                "value": "false",
                "computed": false
            }
        }
    }
};


/***/ })

});
//# sourceMappingURL=stories-input-rich-field-stories.d5ca68d9b2e227f6cbe8.hot-update.js.map
"use strict";
self["webpackHotUpdatestorybook_react"]("stories-input-text-field-stories",{

/***/ "./src/feature/input/text-field.component.tsx":
/*!****************************************************!*\
  !*** ./src/feature/input/text-field.component.tsx ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   TextField: () => (/* binding */ TextField),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _text_field_style_scss__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./text-field.style.scss */ "./src/feature/input/text-field.style.scss");


const TextField = ({ type = 'text', placeholder, showHint = false, hint = '', autofocus = false, value, disabled = false, theme, onChange, onInput, isValid = true })=>{
    const inputRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
    const [internalValue, setInternalValue] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(value);
    // Handle autofocus
    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{
        if (autofocus && inputRef.current) {
            inputRef.current.focus();
        }
    }, [
        autofocus
    ]);
    const handleChange = (event)=>{
        setInternalValue(event.target.value);
        onChange(event.target.value);
    };
    const handleInput = (event)=>{
        onInput(event.target.value);
    };
    const handleInvalid = ()=>{
        if (inputRef.current) {
            inputRef.current.classList.add('error');
            if (disabled) {
                inputRef.current.classList.add('error--disabled');
            }
        }
    };
    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{
        if (inputRef.current) {
            if (!isValid) {
                inputRef.current.classList.add('error');
            } else {
                inputRef.current.classList.remove('error');
            }
        }
    }, [
        isValid
    ]);
    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{
        if (showHint && inputRef.current && hint) {
            const hintWidth = inputRef.current.offsetWidth;
            inputRef.current.style.paddingRight = `${hintWidth}px`;
        }
    }, [
        showHint,
        hint
    ]);
    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
        className: `text-field-container ${theme}`
    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement("input", {
        ref: inputRef,
        type: type,
        placeholder: placeholder,
        disabled: disabled,
        value: internalValue,
        onChange: handleChange,
        onInput: handleInput,
        className: `input--${disabled ? 'disabled' : 'enabled'} ${theme}`
    }), showHint && hint && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
        id: "hint-container",
        className: theme
    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement("span", {
        className: "hint"
    }, hint)));
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (TextField);
TextField.__docgenInfo = {
    "description": "",
    "methods": [],
    "displayName": "TextField",
    "props": {
        "type": {
            "required": false,
            "tsType": {
                "name": "string"
            },
            "description": "",
            "defaultValue": {
                "value": "'text'",
                "computed": false
            }
        },
        "placeholder": {
            "required": true,
            "tsType": {
                "name": "string"
            },
            "description": ""
        },
        "showHint": {
            "required": false,
            "tsType": {
                "name": "boolean"
            },
            "description": "",
            "defaultValue": {
                "value": "false",
                "computed": false
            }
        },
        "hint": {
            "required": false,
            "tsType": {
                "name": "string"
            },
            "description": "",
            "defaultValue": {
                "value": "''",
                "computed": false
            }
        },
        "autofocus": {
            "required": false,
            "tsType": {
                "name": "boolean"
            },
            "description": "",
            "defaultValue": {
                "value": "false",
                "computed": false
            }
        },
        "value": {
            "required": true,
            "tsType": {
                "name": "string"
            },
            "description": ""
        },
        "disabled": {
            "required": false,
            "tsType": {
                "name": "boolean"
            },
            "description": "",
            "defaultValue": {
                "value": "false",
                "computed": false
            }
        },
        "theme": {
            "required": true,
            "tsType": {
                "name": "union",
                "raw": "'light-theme' | 'dark-theme'",
                "elements": [
                    {
                        "name": "literal",
                        "value": "'light-theme'"
                    },
                    {
                        "name": "literal",
                        "value": "'dark-theme'"
                    }
                ]
            },
            "description": ""
        },
        "onChange": {
            "required": true,
            "tsType": {
                "name": "signature",
                "type": "function",
                "raw": "(value: string) => void",
                "signature": {
                    "arguments": [
                        {
                            "type": {
                                "name": "string"
                            },
                            "name": "value"
                        }
                    ],
                    "return": {
                        "name": "void"
                    }
                }
            },
            "description": ""
        },
        "onInput": {
            "required": true,
            "tsType": {
                "name": "signature",
                "type": "function",
                "raw": "(value: string) => void",
                "signature": {
                    "arguments": [
                        {
                            "type": {
                                "name": "string"
                            },
                            "name": "value"
                        }
                    ],
                    "return": {
                        "name": "void"
                    }
                }
            },
            "description": ""
        },
        "isValid": {
            "required": false,
            "tsType": {
                "name": "boolean"
            },
            "description": "",
            "defaultValue": {
                "value": "true",
                "computed": false
            }
        }
    }
};


/***/ })

});
//# sourceMappingURL=stories-input-text-field-stories.04f76a5e9d199707e6cd.hot-update.js.map
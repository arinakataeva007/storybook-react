{"version":3,"file":"src_feature_floating_pop-up_pop-up_component_tsx.f31059e63ac94c92363e.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAQA;AAMA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAIA;AAEA","sources":["webpack://storybook-react/./src/feature/floating/pop-up/pop-up.component.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport ScrollGroup from \"../../cells/scroll-group.component\";\nimport \"./pop-up.style.scss\";\ninterface PopUpProps {\n  isModal?: boolean;\n  scroll?: boolean;\n  theme: 'light-theme';\n  children: React.ReactNode;\n}\n\nexport const PopUp: React.FC<PopUpProps> = ({\n  isModal = false,\n  scroll = false,\n  theme,\n  children,\n}) => {\n  const popUpRef = useRef<HTMLDivElement>(null);\n  const scrollGroupRef = useRef<HTMLDivElement>(null);\n  const [fullHeightContent, setFullHeightContent] = useState(0);\n\n  useEffect(() => {\n    if (scrollGroupRef.current) {\n      setFullHeightContent(scrollGroupRef.current.scrollHeight);\n    }\n  }, [children]);\n  const classes = [\n    \"popUp-container\",\n    scroll ? \"popUp-with-scroll\" : \"\",\n    !isModal ? \"resizing\" : \"\",\n  ].join(\" \");\n\n  useEffect(() => {\n    if (popUpRef.current && scrollGroupRef.current) {\n      popUpRef.current.style.maxHeight = `${fullHeightContent + 16}px`;\n    }\n  }, [fullHeightContent]);\n\n  return (\n    <div ref={popUpRef} className={`popUp-container ${classes}`}>\n      <ScrollGroup ref={scrollGroupRef} orientation=\"vertical\" theme={theme}>\n        <div style={{ display: \"contents\" }}>{children}</div>\n      </ScrollGroup>\n    </div>\n  );\n};\n\nexport default PopUp;\n"],"names":[],"sourceRoot":""}
{"version":3,"file":"stories-input-rich-field-stories.ce47ef6c34f7639710ed.hot-update.js","mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AAYA;AASA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAGA;AAEA","sources":["webpack://storybook-react/./src/feature/input/rich-text-field/rich-text.component.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport './rich-text.style.scss';\n\ninterface RichTextFieldProps {\n  placeholder?: string;\n  hint?: string;\n  showHint?: boolean;\n  theme?: string;\n  onInputChange?: (value: string) => void;\n  onValueChange?: (value: string) => void;\n  disabled?: boolean;\n}\n\nexport const RichTextField: React.FC<RichTextFieldProps> = ({\n  placeholder = '',\n  hint = '',\n  showHint = false,\n  theme = '',\n  onInputChange,\n  onValueChange,\n  disabled = false,\n}) => {\n  const [value, setValue] = useState<string>('');\n\n  const handleInput = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n    const newValue = event.target.value;\n    setValue(newValue);\n    console.log(value);\n    if (onInputChange) onInputChange(newValue);\n  };\n\n  const handleChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n    const newValue = event.target.value;\n    setValue(newValue);\n    console.log(value);\n    if (onValueChange) onValueChange(newValue);\n  };\n\n  return (\n    <div className='rich-text'>\n      <textarea\n        className={`rich-text-field ${theme === 'dark-theme' ? 'dark-theme' : ''}`}\n        placeholder={placeholder}\n        disabled={disabled}\n        value={value}\n        onInput={handleInput}\n        onChange={handleChange}\n      ></textarea>\n      {showHint && <div className=\"hint-container-rich\">{hint}</div>}\n    </div>\n  );\n};\n\nexport default RichTextField;\n"],"names":[],"sourceRoot":""}
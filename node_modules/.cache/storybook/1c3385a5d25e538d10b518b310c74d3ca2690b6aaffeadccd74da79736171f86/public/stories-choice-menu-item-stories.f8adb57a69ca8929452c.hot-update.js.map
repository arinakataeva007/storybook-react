{"version":3,"file":"stories-choice-menu-item-stories.f8adb57a69ca8929452c.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAGA;AAEA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;;AAQA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://storybook-react/./src/stories/choice/menu-item.stories.tsx"],"sourcesContent":["import React from 'react';\nimport { Meta, StoryObj } from '@storybook/react';\nimport { MenuItem } from '../../feature/choice/menu-item.component';\nimport { BaseButton } from '../../feature/buttons/base-button/base-button.component';\n\nexport default {\n  title: 'Choice/MenuItem',\n  component: MenuItem,\n  subcomponents: { BaseButton },\n  decorators: [\n    (Story) => (\n      <div style={{ width: '300px' }}>\n        <Story />\n      </div>\n    ),\n  ],\n  argTypes: {\n    theme: {\n      options: ['light-theme', 'dark-theme'],\n      control: { type: 'radio' },\n      table: { defaultValue: { summary: 'light-theme' } },\n    },\n    disabled: {\n      table: { defaultValue: { summary: 'false' } },\n    },\n    showIcon: {\n      table: { defaultValue: { summary: 'false' } },\n      description: 'Атрибут можно не указывать, иконка всегда встает перед текстом',\n    },\n    showHint: {\n      table: { defaultValue: { summary: 'false' } },\n    },\n    showCollapseIcon: {\n      table: { defaultValue: { summary: 'true' } },\n      description: 'При нажатии возникает выпадающий список (popUp)',\n    },\n    showText: {\n      table: { defaultValue: { summary: 'true' } },\n    },\n    isActive: {\n      description: 'Обозначает, что элемент выбран',\n    },\n    popUpScroll: {\n      description:\n        'Разрешает скроллить выпадающий список, если true, не разрешает - если false',\n      table: { defaultValue: { summary: 'false' } },\n    },\n    isOwner: {\n      description:\n        'True - если компонент является вложенным, теряет некоторые свойства',\n      table: { defaultValue: { summary: 'false' } },\n    },\n    activeState: {\n      description:\n        'Output - свойство, возвращает true, если элемент выбран, false, если не выбран',\n    },\n  },\n} as Meta;\n\nconst Template = (args) => (\n  <MenuItem {...args}>\n    {args.showIcon && <BaseButton theme={args.theme} name=\"plc\" size=\"base\" disabled={args.disabled} />}\n    {args.label}\n    {args.showCollapseIcon && (\n      <MenuItem\n        options\n        theme={args.theme}\n        label=\"Какая-то опция\"\n        hint=\"Ctrl + Shift + N\"\n        showIcon\n        {...args}\n      >\n        {args.showIcon && <BaseButton theme={args.theme} name=\"plc\" size=\"base\" disabled={args.disabled} />}\n        <MenuItem\n          options\n          theme={args.theme}\n          label=\"Последняя опция\"\n          hint=\"Ctrl + Shift + N\"\n          showIcon\n          showCollapseIcon={false}\n          {...args}\n        >\n          {args.showIcon && (\n            <BaseButton theme={args.theme} name=\"plc\" size=\"base\" disabled={args.disabled} />\n          )}\n        </MenuItem>\n      </MenuItem>\n    )}\n  </MenuItem>\n);\n\nexport const LightTheme = Template.bind({});\n\nLightTheme.args = {\n  hint: 'Ctrl + Shift + N',\n  label: 'Label',\n  showIcon: true,\n  showText: true,\n  showCollapseIcon: true,\n  isActive: false,\n  showHint: true,\n  popUpScroll: false,\n  theme: 'light-theme',\n  disabled: false,\n  isOwner: false,\n};\nLightTheme.parameters = {\n    backgrounds: { default: 'Light Theme' },\n  docs: {\n    description: {\n      story: 'This story demonstrates the light theme of the component.',\n    },\n  },\n}\n\nexport const DarkTheme = Template.bind({});\nDarkTheme.args = {\n  hint: 'Ctrl + Shift + N',\n  label: 'Label',\n  showIcon: true,\n  showText: true,\n  showCollapseIcon: true,\n  isActive: false,\n  showHint: true,\n  popUpScroll: false,\n  theme: 'dark-theme',\n  disabled: false,\n  isOwner: false,\n};\n"],"names":[],"sourceRoot":""}
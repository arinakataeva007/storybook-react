{"version":3,"file":"stories-buttons-button-stories.1391c84010830c194734.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAGA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3CA;AACA;AAYA;AASA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AACA;AAMA;AAEA","sources":["webpack://storybook-react/./src/stories/buttons/button.stories.tsx","webpack://storybook-react/./src/feature/buttons/button/button.component.tsx"],"sourcesContent":["import React from 'react';\nimport { Meta, StoryObj } from '@storybook/react';\nimport {ButtonComponent} from '../../feature/buttons/button/button.component';\n\nexport default {\n  title: 'Buttons/ButtonComponent',\n  component: ButtonComponent,\n//   subcomponents: { BaseIconComponent },\n  argTypes: {\n    state: {\n      options: ['primary', 'secondary'],\n      control: { type: 'radio' },\n      table: { defaultValue: { summary: 'primary' } },\n    },\n    theme: {\n      options: ['light-theme', 'dark-theme'],\n      control: { type: 'radio' },\n    },\n  },\n} as Meta;\ntype Story = StoryObj<typeof ButtonComponent>;\nconst Template = (args: any) => (\n    <ButtonComponent {...args}/>\n  );\n\nexport const LightTheme = Template.bind({});\nLightTheme.args = {\n  label: 'Label',\n  showIcon: true,\n  showText: true,\n  disabled: false,\n  state: 'primary',\n  theme: 'light-theme',\n};\n\nexport const DarkTheme = Template.bind({});\nDarkTheme.args = {\n  label: 'Label',\n  showIcon: true,\n  showText: true,\n  disabled: false,\n  state: 'primary',\n  theme: 'dark-theme',\n};\n","import React, { MouseEventHandler } from 'react';\nimport './ButtonComponent.scss';\n\ninterface ButtonComponentProps {\n  label: string;\n  state?: 'primary' | 'secondary';\n  theme: 'light-theme' | 'dark-theme';\n  disabled?: boolean;\n  showIcon?: boolean;\n  showText?: boolean;\n  onAction?: MouseEventHandler<HTMLButtonElement>;\n}\n\nexport const ButtonComponent: React.FC<ButtonComponentProps> = ({\n  label,\n  state = 'secondary',\n  theme,\n  disabled = false,\n  showIcon = true,\n  showText = true,\n  onAction,\n}) => {\n  const classes = [\n    `button--${state}`,\n    `button--${state}--${theme}`,\n    disabled ? `button--disabled--${state}` : '',\n    disabled ? `button--disabled--${state}--${theme}` : '',\n  ].filter(Boolean).join(' ');\n\n  // Click event handler\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    if (onAction) {\n      onAction(event);\n    }\n  };\n\n  return (\n    <button\n      className={`button ${classes}`}\n      onClick={handleClick}\n      disabled={disabled}\n    >\n      <div className=\"label-container\">\n        <div className=\"label\">\n          {showIcon}\n          {showText && <span>{label}</span>}\n        </div>\n      </div>\n    </button>\n  );\n};\n\nexport default ButtonComponent;\n"],"names":[],"sourceRoot":""}
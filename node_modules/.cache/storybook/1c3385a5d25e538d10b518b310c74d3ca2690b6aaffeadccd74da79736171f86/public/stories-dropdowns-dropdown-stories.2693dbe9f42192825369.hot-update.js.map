{"version":3,"file":"stories-dropdowns-dropdown-stories.2693dbe9f42192825369.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AAcA;AAWA;AACA;AACA;AAEA;AACA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAMA;AAEA","sources":["webpack://storybook-react/./src/feature/dropdown/dropdown.component.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport Label from \"../atoms/label/label.component\";\nimport CollapseIcon from \"../../feature/icons/collapse-icon/collapse-icon.component\";\nimport PopUp from \"../../feature/floating/pop-up.component\";\nimport \"./dropdown.styles.scss\";\n\ninterface DropdownProps {\n  popUpScroll?: boolean;\n  collapsePlacement?: \"left\" | \"right\";\n  theme?: \"light-theme\" | \"dark-theme\";\n  label?: string;\n  showIcon?: boolean;\n  showText?: boolean;\n  disabled?: boolean;\n  onActiveStateChange?: (isOpen: boolean) => void;\n  children: React.ReactNode;\n}\n\nexport const Dropdown: React.FC<DropdownProps> = ({\n  popUpScroll = false,\n  collapsePlacement = \"right\",\n  theme = \"light-theme\",\n  label = \"\",\n  showIcon = false,\n  showText = false,\n  disabled = false,\n  onActiveStateChange = () => {},\n  children,\n}) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const dropdownRef = useRef<HTMLDivElement | null>(null);\n  const popUpRef = useRef<HTMLDivElement | null>(null);\n\n  const handleDocumentClick = (event: MouseEvent) => {\n    if (\n      dropdownRef.current &&\n      !dropdownRef.current.contains(event.target as Node)\n    ) {\n      hideDropdown();\n    }\n  };\n\n  const hideDropdown = () => {\n    setIsOpen(false);\n    onActiveStateChange(false);\n  };\n\n  const openDropdown = () => {\n    setIsOpen((prev) => {\n      const newState = !prev;\n      onActiveStateChange(newState);\n      return newState;\n    });\n  };\n\n  useEffect(() => {\n    document.addEventListener(\"click\", handleDocumentClick);\n    return () => {\n      document.removeEventListener(\"click\", handleDocumentClick);\n    };\n  }, []);\n\n  useEffect(() => {\n    if(popUpRef.current && isOpen){\n      popUpRef.current.style.position = 'fixed';\n      popUpRef.current.style.zIndex = '100';\n      popUpRef.current.style.left = `${dropdownRef.current?.getBoundingClientRect().left}px`\n      popUpRef.current.style.top = `${dropdownRef.current?.getBoundingClientRect().bottom}px`;\n    }\n  }, [isOpen]);\n\n  const getClasses = () => {\n    if (disabled) {\n      return [`menu-item-disabled-${theme}`];\n    }\n    return [`menu-item-${theme}`];\n  };\n\n  return (\n    <section\n      ref={dropdownRef}\n      tabIndex={0}\n      className={`dropdown-container ${getClasses().join(\" \")}`}\n      onClick={openDropdown}\n    >\n      {collapsePlacement === \"left\" && (\n        <div className=\"footer-container\">\n          <CollapseIcon\n            disabled={disabled}\n            size=\"base\"\n            theme={theme}\n            rotate=\"down\"\n          />\n        </div>\n      )}\n\n      {/* <Label\n        isOwner={true}\n        disabled={disabled}\n        showIcon={showIcon}\n        showText={showText}\n        size=\"base\"\n        label={label}\n        theme={theme}\n      >\n        {children}\n      </Label> */}\n\n      {collapsePlacement === \"right\" && (\n        <div className=\"footer-container\">\n          <CollapseIcon\n            disabled={disabled}\n            size=\"base\"\n            theme={theme}\n            rotate=\"down\"\n          />\n        </div>\n      )}\n\n      {isOpen && (\n        <div ref={popUpRef} className=\"popUp-dropdown-container\">\n          <PopUp theme={theme} isModal={false} scroll={popUpScroll}>\n            <div onMouseLeave={hideDropdown}>{children}</div>\n          </PopUp>\n        </div>\n      )}\n    </section>\n  );\n};\n\nexport default Dropdown;\n"],"names":[],"sourceRoot":""}
"use strict";
self["webpackHotUpdatestorybook_react"]("stories-choice-menu-item-stories",{

/***/ "./src/stories/choice/menu-item.stories.tsx":
/*!**************************************************!*\
  !*** ./src/stories/choice/menu-item.stories.tsx ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DarkTheme: () => (/* binding */ DarkTheme),
/* harmony export */   LightTheme: () => (/* binding */ LightTheme),
/* harmony export */   __namedExportsOrder: () => (/* binding */ __namedExportsOrder),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _feature_choice_menu_item_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../feature/choice/menu-item.component */ "./src/feature/choice/menu-item.component.tsx");
/* harmony import */ var _feature_buttons_base_button_base_button_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../feature/buttons/base-button/base-button.component */ "./src/feature/buttons/base-button/base-button.component.tsx");



/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  title: "Choice/MenuItem",
  component: _feature_choice_menu_item_component__WEBPACK_IMPORTED_MODULE_1__.MenuItem,
  subcomponents: {
    BaseButton: _feature_buttons_base_button_base_button_component__WEBPACK_IMPORTED_MODULE_2__.BaseButton
  },
  tags: ["autodocs"],
  decorators: [Story => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    style: {
      width: "300px"
    }
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(Story, null))],
  argTypes: {
    theme: {
      options: ["light-theme", "dark-theme"],
      control: {
        type: "radio"
      },
      table: {
        defaultValue: {
          summary: "light-theme"
        }
      }
    },
    disabled: {
      table: {
        defaultValue: {
          summary: "false"
        }
      }
    },
    showIcon: {
      table: {
        defaultValue: {
          summary: "true"
        }
      },
      description: "Атрибут можно не указывать, иконка всегда встает перед текстом"
    },
    showHint: {
      table: {
        defaultValue: {
          summary: "true"
        }
      }
    },
    showCollapseIcon: {
      table: {
        defaultValue: {
          summary: "true"
        }
      },
      description: "При нажатии возникает выпадающий список (popUp)"
    },
    showText: {
      table: {
        defaultValue: {
          summary: "true"
        }
      }
    },
    isActive: {
      description: "Обозначает, что элемент выбран"
    },
    popUpScroll: {
      description: "Разрешает скроллить выпадающий список, если true, не разрешает - если false",
      table: {
        defaultValue: {
          summary: "false"
        }
      }
    },
    isOwner: {
      description: "True - если компонент является вложенным, теряет некоторые свойства",
      table: {
        defaultValue: {
          summary: "false"
        }
      }
    },
    activeState: {
      description: "Output - свойство, возвращает true, если элемент выбран, false, если не выбран"
    }
  }
});
const Template = args => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_feature_choice_menu_item_component__WEBPACK_IMPORTED_MODULE_1__.MenuItem, {
  ...args,
  childrenIcon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_feature_buttons_base_button_base_button_component__WEBPACK_IMPORTED_MODULE_2__.BaseButton, {
    "data-position": "prev-icon",
    theme: args.theme,
    name: "plc",
    size: "base",
    disabled: args.disabled
  }),
  childrenPopUp: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_feature_choice_menu_item_component__WEBPACK_IMPORTED_MODULE_1__.MenuItem, {
    theme: args.theme,
    label: "Какая-то опция",
    hint: "Ctrl + Shift + N",
    showIcon: true,
    showCollapseIcon: args.sh
  })
});
const LightTheme = Template.bind({});
LightTheme.args = {
  hint: "Ctrl + Shift + N",
  label: "Label",
  showIcon: true,
  showText: true,
  showCollapseIcon: true,
  isActive: false,
  showHint: true,
  popUpScroll: false,
  theme: "light-theme",
  disabled: false,
  isOwner: false
};
const DarkTheme = Template.bind({});
DarkTheme.args = {
  hint: "Ctrl + Shift + N",
  label: "Label",
  showIcon: true,
  showText: true,
  showCollapseIcon: true,
  isActive: false,
  showHint: true,
  popUpScroll: false,
  theme: "dark-theme",
  disabled: false,
  isOwner: false
};
LightTheme.parameters = {
  backgrounds: {
    default: "Light Theme"
  },
  docs: {
    description: {
      story: "This story demonstrates the light theme of the component."
    }
  }
};
DarkTheme.parameters = {
  backgrounds: {
    default: "Dark Theme"
  },
  docs: {
    description: {
      story: "This story demonstrates the dark theme of the component."
    }
  }
};
;
const __namedExportsOrder = ["LightTheme", "DarkTheme"];
LightTheme.parameters = {
  ...LightTheme.parameters,
  docs: {
    ...LightTheme.parameters?.docs,
    source: {
      originalSource: "args => <MenuItem {...args} childrenIcon={<BaseButton data-position=\"prev-icon\" theme={args.theme} name=\"plc\" size=\"base\" disabled={args.disabled} />} childrenPopUp={<MenuItem theme={args.theme} label=\"\u041A\u0430\u043A\u0430\u044F-\u0442\u043E \u043E\u043F\u0446\u0438\u044F\" hint=\"Ctrl + Shift + N\" showIcon showCollapseIcon={args.sh}>\n      </MenuItem>}></MenuItem>",
      ...LightTheme.parameters?.docs?.source
    }
  }
};
DarkTheme.parameters = {
  ...DarkTheme.parameters,
  docs: {
    ...DarkTheme.parameters?.docs,
    source: {
      originalSource: "args => <MenuItem {...args} childrenIcon={<BaseButton data-position=\"prev-icon\" theme={args.theme} name=\"plc\" size=\"base\" disabled={args.disabled} />} childrenPopUp={<MenuItem theme={args.theme} label=\"\u041A\u0430\u043A\u0430\u044F-\u0442\u043E \u043E\u043F\u0446\u0438\u044F\" hint=\"Ctrl + Shift + N\" showIcon showCollapseIcon={args.sh}>\n      </MenuItem>}></MenuItem>",
      ...DarkTheme.parameters?.docs?.source
    }
  }
};

/***/ })

});
//# sourceMappingURL=stories-choice-menu-item-stories.39b80da0f79d0698c49a.hot-update.js.map
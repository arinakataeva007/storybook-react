{"version":3,"file":"stories-input-text-field-stories.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAIA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;AC3EA;AACA;AACA;AAgBA;AAaA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAMA;AAEA","sources":["webpack://storybook-react/./src/stories/input/text-field.stories.tsx","webpack://storybook-react/./src/feature/input/text-field/text-field.style.scss","webpack://storybook-react/./src/feature/input/text-field/text-field.style.scss?44d7","webpack://storybook-react/./src/feature/input/text-field/text-field.component.tsx"],"sourcesContent":["import type { Meta, StoryObj } from '@storybook/react';\nimport React from 'react';\nimport TextField from '../../feature/input/text-field/text-field.component';\nconst meta: Meta<typeof TextField> = {\n  title: 'Input/TextField',\n  component: TextField,\n  parameters: {\n    designToken: {\n      disable: true,\n    },\n  },\n  argTypes: {\n    theme: {\n      options: ['light-theme', 'dark-theme'],\n      control: { type: 'radio' },\n      table: { defaultValue: { summary: 'light-theme' } },\n    },\n    type: {\n      options: ['text', 'password'],\n      control: { type: 'radio' },\n      table: { defaultValue: { summary: 'text' } },\n    },\n    disabled: {\n      control: { type: 'boolean' },\n      table: { defaultValue: { summary: 'false' } },\n    },\n    showHint: {\n      control: { type: 'boolean' },\n      table: { defaultValue: { summary: 'false' } },\n    },\n    hint: {\n      control: { type: 'text' },\n    },\n    placeholder: {\n      control: { type: 'text' },\n    },\n    autofocus: {\n      control: { type: 'boolean' },\n      table: { defaultValue: { summary: 'false' } },\n    },\n    value: {\n      control: { type: 'text' },\n    },\n    onChange: {\n      action: 'changed',\n      description: 'Fires when the input value changes',\n    },\n    onInput: {\n      action: 'input',\n      description: 'Fires on every key input',\n    },\n  },\n  decorators: [\n    (Story) => <div style={{ width: '300px' }}>{Story()}</div>,\n  ],\n  tags: ['autodocs'],\n};\nexport default meta;\n\ntype Story = StoryObj<typeof TextField>;\n\nexport const LightTheme: Story = {\n  parameters: {\n    backgrounds: { default: 'Light Theme' },\n  },\n  args: {\n    placeholder: 'Placeholder',\n    autofocus: true,\n    hint: 'hint',\n    showHint: true,\n    disabled: false,\n    theme: 'light-theme',\n    type: 'text',\n  },\n};\n\nexport const DarkTheme: Story = {\n  parameters: {\n    backgrounds: { default: 'Dark Theme' },\n  },\n  args: {\n    placeholder: 'Placeholder',\n    disabled: false,\n    autofocus: true,\n    hint: 'hint',\n    showHint: true,\n    theme: 'dark-theme',\n    type: 'password',\n  },\n};\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, ``, \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./text-field.style.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n  var p;\n  for (p in a) {\n    if (isNamedExport && p === \"default\") {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n  for (p in b) {\n    if (isNamedExport && p === \"default\") {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n    if (!a[p]) {\n      return false;\n    }\n  }\n  return true;\n};\n    var isNamedExport = !content.locals;\n    var oldLocals = isNamedExport ? namedExport : content.locals;\n\n    module.hot.accept(\n      \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./text-field.style.scss\",\n      function () {\n        if (!isEqualLocals(oldLocals, isNamedExport ? namedExport : content.locals, isNamedExport)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = isNamedExport ? namedExport : content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./text-field.style.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport \"./text-field.style.scss\";\nimport { LabelComponent } from \"../../atoms/label/label.component\";\n\ninterface TextFieldProps {\n  type?: string;\n  placeholder: string;\n  showHint?: boolean;\n  hint?: string;\n  autofocus?: boolean;\n  value: string;\n  disabled?: boolean;\n  theme: \"light-theme\" | \"dark-theme\";\n  onChange: (value: string) => void;\n  onInput: (value: string) => void;\n  isValid?: boolean;\n}\n\nexport const TextField: React.FC<TextFieldProps> = ({\n  type = \"text\",\n  placeholder,\n  showHint = false,\n  hint = \"\",\n  autofocus = false,\n  value,\n  disabled = false,\n  theme,\n  onChange,\n  onInput,\n  isValid = true,\n}) => {\n  const inputRef = useRef<HTMLInputElement | null>(null);\n  const [internalValue, setInternalValue] = useState(value);\n\n  useEffect(() => {\n    if (autofocus && inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, [autofocus]);\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setInternalValue(event.target.value);\n    onChange(event.target.value);\n  };\n\n  const handleInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    onInput(event.target.value);\n  };\n\n  const handleInvalid = () => {\n    if (inputRef.current) {\n      inputRef.current.classList.add(\"error\");\n      if (disabled) {\n        inputRef.current.classList.add(\"error--disabled\");\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (inputRef.current) {\n      if (!isValid) {\n        inputRef.current.classList.add(\"error\");\n      } else {\n        inputRef.current.classList.remove(\"error\");\n      }\n    }\n  }, [isValid]);\n\n  useEffect(() => {\n    if (showHint && inputRef.current && hint) {\n      const hintWidth = inputRef.current.offsetWidth;\n      inputRef.current.style.paddingRight = `${hintWidth}px`;\n    }\n  }, [showHint, hint]);\n\n  return (\n    <div className={`text-field-container ${theme}`}>\n      <input\n        ref={inputRef}\n        type={type}\n        placeholder={placeholder}\n        disabled={disabled}\n        value={internalValue}\n        onChange={handleChange}\n        onInput={handleInput}\n        className={`input--${disabled ? \"disabled\" : \"enabled\"} ${theme}`}\n      />\n      {showHint && hint && (\n        <div id=\"hint-container\">\n          <LabelComponent\n            isOwner={true}\n            label={hint}\n            size={\"base\"}\n            theme={theme}\n          >\n            <span className=\"hint\">{hint}</span>\n          </LabelComponent>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TextField;\n"],"names":[],"sourceRoot":""}
"use strict";
self["webpackHotUpdatestorybook_react"]("stories-atoms-toggle-check-stories",{

/***/ "./src/stories/atoms/toggle-check.stories.tsx":
/*!****************************************************!*\
  !*** ./src/stories/atoms/toggle-check.stories.tsx ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DarkTheme: () => (/* binding */ DarkTheme),
/* harmony export */   LightTheme: () => (/* binding */ LightTheme),
/* harmony export */   __namedExportsOrder: () => (/* binding */ __namedExportsOrder),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _feature_atoms_toggle_check_toggle_check__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../feature/atoms/toggle-check/toggle-check */ "./src/feature/atoms/toggle-check/toggle-check.tsx");
Object(function webpackMissingModule() { var e = new Error("Cannot find module './'"); e.code = 'MODULE_NOT_FOUND'; throw e; }());



// Define the metadata for the ToggleCheckComponent story
const meta = {
  title: 'Atoms/ToggleCheckComponent',
  component: _feature_atoms_toggle_check_toggle_check__WEBPACK_IMPORTED_MODULE_1__.ToggleCheckComponent,
  tags: ['autodocs'],
  argTypes: {
    theme: {
      options: ['light-theme', 'dark-theme'],
      control: {
        type: 'radio'
      },
      table: {
        defaultValue: {
          summary: 'light-theme'
        }
      }
    },
    disabled: {
      table: {
        defaultValue: {
          summary: 'false'
        }
      }
    }
  }
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (meta);
// Define the LightTheme story
const LightTheme = {
  parameters: {
    backgrounds: {
      default: 'Light Theme'
    }
  },
  args: {
    toggleId: 'test1',
    disabled: false,
    theme: 'light-theme'
  }
};
// Define the DarkTheme story
const DarkTheme = {
  parameters: {
    backgrounds: {
      default: 'Dark Theme'
    }
  },
  args: {
    toggleId: 'test1',
    disabled: false,
    theme: 'dark-theme'
  }
};
;
const __namedExportsOrder = ["LightTheme", "DarkTheme"];
LightTheme.parameters = {
  ...LightTheme.parameters,
  docs: {
    ...LightTheme.parameters?.docs,
    source: {
      originalSource: "{\n  parameters: {\n    backgrounds: {\n      default: 'Light Theme'\n    }\n  },\n  args: {\n    toggleId: 'test1',\n    disabled: false,\n    theme: 'light-theme'\n  }\n}",
      ...LightTheme.parameters?.docs?.source
    }
  }
};
DarkTheme.parameters = {
  ...DarkTheme.parameters,
  docs: {
    ...DarkTheme.parameters?.docs,
    source: {
      originalSource: "{\n  parameters: {\n    backgrounds: {\n      default: 'Dark Theme'\n    }\n  },\n  args: {\n    toggleId: 'test1',\n    disabled: false,\n    theme: 'dark-theme'\n  }\n}",
      ...DarkTheme.parameters?.docs?.source
    }
  }
};

/***/ }),

/***/ "./src/feature/atoms/toggle-check/toggle-check.tsx":
/*!*********************************************************!*\
  !*** ./src/feature/atoms/toggle-check/toggle-check.tsx ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ToggleCheckComponent: () => (/* binding */ ToggleCheckComponent),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);

const ToggleCheckComponent = ({ toggleId, value, onChange, onBlur, disabled = false, theme })=>{
    const handleChange = (e)=>{
        onChange(e.target.checked);
        onBlur();
    };
    const toggleClass = disabled ? `toggle--${theme} toggle--disabled--${theme}` : `toggle--${theme}`;
    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", null, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement("input", {
        id: toggleId,
        type: "checkbox",
        checked: value,
        onChange: handleChange,
        onBlur: onBlur,
        disabled: disabled,
        className: "toggle-check"
    }), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement("label", {
        htmlFor: toggleId,
        className: `toggle-btn ${toggleClass}`
    }));
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ToggleCheckComponent);
ToggleCheckComponent.__docgenInfo = {
    "description": "",
    "methods": [],
    "displayName": "ToggleCheckComponent",
    "props": {
        "toggleId": {
            "required": true,
            "tsType": {
                "name": "string"
            },
            "description": ""
        },
        "value": {
            "required": true,
            "tsType": {
                "name": "boolean"
            },
            "description": ""
        },
        "onChange": {
            "required": true,
            "tsType": {
                "name": "signature",
                "type": "function",
                "raw": "(value: boolean) => void",
                "signature": {
                    "arguments": [
                        {
                            "type": {
                                "name": "boolean"
                            },
                            "name": "value"
                        }
                    ],
                    "return": {
                        "name": "void"
                    }
                }
            },
            "description": ""
        },
        "onBlur": {
            "required": true,
            "tsType": {
                "name": "signature",
                "type": "function",
                "raw": "() => void",
                "signature": {
                    "arguments": [],
                    "return": {
                        "name": "void"
                    }
                }
            },
            "description": ""
        },
        "disabled": {
            "required": false,
            "tsType": {
                "name": "boolean"
            },
            "description": "",
            "defaultValue": {
                "value": "false",
                "computed": false
            }
        },
        "theme": {
            "required": true,
            "tsType": {
                "name": "string"
            },
            "description": ""
        }
    }
};


/***/ })

});
//# sourceMappingURL=stories-atoms-toggle-check-stories.fb322e66ef33371a1830.hot-update.js.map
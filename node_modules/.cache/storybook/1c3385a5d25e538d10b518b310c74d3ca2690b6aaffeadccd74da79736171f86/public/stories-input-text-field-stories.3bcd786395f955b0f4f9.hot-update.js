"use strict";
self["webpackHotUpdatestorybook_react"]("stories-input-text-field-stories",{

/***/ "./src/feature/input/text-field/text-field.component.tsx":
/*!***************************************************************!*\
  !*** ./src/feature/input/text-field/text-field.component.tsx ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
Object(function webpackMissingModule() { var e = new Error("Cannot find module './TextField.css'"); e.code = 'MODULE_NOT_FOUND'; throw e; }());


const TextField = ({ placeholder = '', showHint = false, hint = '', autofocus = false, maxLength, minLength, value: initialValue = '', onChange, onInput, disabled = false, theme = 'light-theme' })=>{
    const [value, setValue] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(initialValue);
    const inputRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{
        if (autofocus && inputRef.current) {
            inputRef.current.focus();
        }
        if (showHint && inputRef.current) {
            const hintContainer = document.getElementById('hint-container');
            if (hintContainer) {
                const hintWidth = hintContainer.getBoundingClientRect().width;
                inputRef.current.style.paddingRight = `${Math.round(hintWidth)}px`;
            }
        }
    }, [
        autofocus,
        showHint
    ]);
    const handleInputChange = (e)=>{
        const newValue = e.target.value;
        if (onInput) {
            onInput(newValue);
        }
        setValue(newValue);
    };
    const handleBlur = ()=>{
        if (onChange) {
            onChange(value);
        }
    };
    const getClasses = ()=>{
        const classes = [
            `input--${theme}`
        ];
        if (disabled) {
            classes.push(`input--disabled--${theme}`, 'input--disabled');
        }
        return classes.join(' ');
    };
    const makeInvalid = ()=>{
        if (inputRef.current) {
            inputRef.current.classList.add('error');
            if (theme === 'dark-theme') {
                inputRef.current.classList.add('error--dark');
            }
        }
    };
    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
        className: "text-field-container"
    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement("input", {
        ref: inputRef,
        type: "text",
        placeholder: placeholder,
        maxLength: maxLength,
        minLength: minLength,
        value: value,
        onChange: handleInputChange,
        onBlur: handleBlur,
        disabled: disabled,
        className: getClasses()
    }), showHint && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
        id: "hint-container",
        className: "hint"
    }, hint));
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (TextField);
TextField.__docgenInfo = {
    "description": "",
    "methods": [],
    "displayName": "TextField",
    "props": {
        "placeholder": {
            "defaultValue": {
                "value": "''",
                "computed": false
            },
            "required": false
        },
        "showHint": {
            "defaultValue": {
                "value": "false",
                "computed": false
            },
            "required": false
        },
        "hint": {
            "defaultValue": {
                "value": "''",
                "computed": false
            },
            "required": false
        },
        "autofocus": {
            "defaultValue": {
                "value": "false",
                "computed": false
            },
            "required": false
        },
        "value": {
            "defaultValue": {
                "value": "''",
                "computed": false
            },
            "required": false
        },
        "disabled": {
            "defaultValue": {
                "value": "false",
                "computed": false
            },
            "required": false
        },
        "theme": {
            "defaultValue": {
                "value": "'light-theme'",
                "computed": false
            },
            "required": false
        }
    }
};


/***/ })

});
//# sourceMappingURL=stories-input-text-field-stories.3bcd786395f955b0f4f9.hot-update.js.map
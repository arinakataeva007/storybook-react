{"version":3,"file":"src_feature_atoms_label_label_component_tsx.a521eb7abd203a6e33b2.hot-update.js","mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AAcA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAQA;AACA;AAIA;AAAA;AACA;AASA;AAEA","sources":["webpack://storybook-react/./src/feature/atoms/label/label.component.tsx"],"sourcesContent":["import React from \"react\";\nimport \"./label.style.scss\";\n\ninterface LabelComponentProps {\n  label: string;\n  size?: \"base\" | \"mid\" | \"large\" | \"extra-large\";\n  theme?: \"light-theme\" | \"dark-theme\";\n  iconPadding?: \"left\" | \"right\";\n  isOwner?: boolean;\n  disabled?: boolean;\n  showIcon?: boolean;\n  showText?: boolean;\n  children?: React.ReactNode;\n}\n\nexport const LabelComponent: React.FC<LabelComponentProps> = ({\n  label,\n  size = \"base\",\n  theme = \"light-theme\",\n  iconPadding,\n  isOwner = false,\n  disabled = false,\n  showIcon = true,\n  showText = true,\n  children,\n}) => {\n  const getClasses = (): string[] => {\n    const mode = isOwner ? \"label-with-owner\" : \"label-without-owner\";\n    if (disabled) {\n      return [\n        \"label--disabled\",\n        `label--size--${size}`,\n        `label--disabled--${theme}`,\n        mode,\n      ];\n    }\n    return [`label--size--${size}`, `label--theme--${theme}`, mode];\n  };\n\n  const getClassPadding = (): string[] => {\n    if (iconPadding === \"left\") return [\"symbol-padding--left\"];\n    if (iconPadding === \"right\") return [\"symbol-padding--right\"];\n    return [];\n  };\n\n  return (\n    <section className={getClasses().join(\" \")}>\n      {showIcon && (\n        <div className=\"icon-container\" data-position=\"prev-icon\">\n          {React.Children.map(children, (child) =>\n            React.isValidElement(child) && child.props[\"data-position\"] === \"prev-icon\"\n              ? child\n              : null\n          )}\n        </div>\n      )}\n      {showText && (\n        <div className={`label-container ${getClassPadding().join(\" \")}`}>\n          {label}\n        </div>\n      )}\n      {showIcon && (\n        <div className=\"icon-container\" data-position=\"after-icon\">\n          {React.Children.map(children, (child) =>\n            React.isValidElement(child) && child.props[\"data-position\"] === \"after-icon\"\n              ? child\n              : null\n          )}\n        </div>\n      )}\n    </section>\n  );\n};\n\nexport default LabelComponent;\n"],"names":[],"sourceRoot":""}
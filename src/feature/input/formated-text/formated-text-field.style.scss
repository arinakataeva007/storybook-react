@import "../../../assets/styles/styles.scss";
.formated-field {
  position: relative;
  background: transparent;
  width: 100%;
  display: flex;
  height: 24px;
  box-sizing: border-box;
  display: flex;
  align-items: center;
  gap: $gapSize-Base;
  &:hover {
    background: transparent;
  }
  .richTooltip {
    position: absolute;
    left: calc(100% + 16px);
    z-index: 100;
  }
  .errorName {
    visibility: hidden;
  }
  &:has(.input:hover, placeholder:hover) {
    .input {
      background: var(--background-bg-2);
      z-index: 0;
    }
    .placeholder {
      z-index: 1;
    }
  }
  &:has(.input:active, .input:focus) {
    .input {
      background: transparent;
      z-index: 10;
    }
    .placeholder {
      z-index: 1;
    }
  }
  &:has(.input:disabled) {
    pointer-events: none;
    .input {
      border: 1px solid var(--state-disabled);
      color: var(--state-disabled);
    }
    .placeholder {
      color: var(--state-disabled);
    }
  }
  &:has(.input:invalid) {
    .errorName {
      visibility: visible;
    }
  }
  .input {
    border-radius: $borderRadius-Base;
    border: 1px solid var(--component-component-secondary);
    background: transparent;
    text-shadow: -1px 1px 0 var(--text-text-inverse);
    z-index: 10;
    @include font-base(14px, 16px);
    border: none;
    box-sizing: border-box;
    width: 100%;
    height: 24px;
    padding-left: 7.4px;
    &:focus {
      outline: none;
      @include outline-style(1px solid var(--state-active), -1px, 4px);
    }
    &:active {
      outline: none;
      border: 1px solid var(--state-active);
    }
    &:invalid {
      outline: none;
      border: 1px solid var(--state-error);
    }
  }
  .placeholder {
    position: absolute;
    @include font-base(14px, 16px);
    left: 8px;
    top: 5px;
    color: var(--text-secondary-text-default);
  }
  &:has(.symbol-theme--dark-theme) {
    .input {
      border: 1px solid var(--component-component-secondary--dark);
      color: var(--text-base-text-default--dark);
      text-shadow: -1px 1px 0 var(--brand-brand-Background--dark);
      &:focus {
        outline: none;
        @include outline-style(1px solid var(--state-active--dark), -1px, 4px);
      }
      &:active {
        outline: none;
        border: 1px solid var(--state-active--dark);
      }
      &:invalid {
        outline: none;
        border: 1px solid var(--state-error--dark);
      }
    }
    .placeholder {
      color: var(--text-secondary-text-default--dark);
    }
    &:has(.input:hover, placeholder:hover) {
      .input {
        background: var(--background-bg-2--dark);
        text-shadow: -1px 1px 0 var(--background-bg-2--dark);
        z-index: 0;
      }
      .placeholder {
        z-index: 1;
      }
    }
    &:has(.input:active, .input:focus) {
      .input {
        background: transparent;
        text-shadow: -1px 1px 0 var(--brand-brand-Background--dark);
        z-index: 10;
      }
      .placeholder {
        z-index: 1;
      }
    }
    &:has(.input:disabled) {
      pointer-events: none;
      .input {
        border: 1px solid var(--state-disabled--dark);
        color: var(--state-disabled--dark);
      }
      .placeholder {
        color: var(--state-disabled--dark);
      }
    }
    &:has(.input:invalid) {
      .errorName {
        visibility: visible;
      }
    }
  }
}
